name: Deploy to Azure Alternative (Static Web Apps + Functions)

on:
  push:
    branches: [ prod ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: play-learn-spark-api
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './server'
  NODE_VERSION: '20.x'

jobs:
  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend to Static Web Apps
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      
      - name: Install and Build Frontend
        run: |
          cd client
          npm ci
          npm run build
      
      - name: Deploy to Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "./client"
          output_location: "dist"
          api_location: ""

  build-and-deploy-backend:
    runs-on: ubuntu-latest
    name: Deploy Backend to Azure Functions
    
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      
      - name: 'Install dependencies and build'
        run: |
          cd server
          npm ci
          npm run build
      
      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}