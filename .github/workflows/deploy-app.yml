name: Deploy Application

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (dev or prod)"
        required: true
        default: "dev"
      branch:
        description: "Branch to deploy from"
        required: true
        default: "dev"
      image_tag:
        description: "Image tag to deploy (default latest)"
        required: false
        default: "latest"

permissions:
  contents: read
  packages: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Get resource information
        id: azure_resources
        run: |
          # Get storage account name from the resource group
          STORAGE_ACCOUNT=$(az storage account list \
            --resource-group play-learn-spark-${{ github.event.inputs.environment }}-rg \
            --query "[0].name" \
            --output tsv)
          
          # Get container group FQDN
          BACKEND_FQDN=$(az container show \
            --name play-learn-spark-${{ github.event.inputs.environment }}-backend \
            --resource-group play-learn-spark-${{ github.event.inputs.environment }}-rg \
            --query "ipAddress.fqdn" \
            --output tsv 2>/dev/null || echo "")
          
          echo "STORAGE=$STORAGE_ACCOUNT" >> $GITHUB_OUTPUT
          echo "BACKEND=$BACKEND_FQDN" >> $GITHUB_OUTPUT

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build frontend
        working-directory: client
        run: |
          npm ci
          npm run build

      - name: Upload frontend dist to static site
        run: |
          az storage blob upload-batch \
            --destination '$web' \
            --account-name ${{ steps.azure_resources.outputs.STORAGE }} \
            --source client/dist

      - name: Update backend container image (recreate)
        run: |
          az container delete --name play-learn-spark-${{ github.event.inputs.environment }}-backend --resource-group play-learn-spark-${{ github.event.inputs.environment }}-rg --yes || true
          az container create \
            --name play-learn-spark-${{ github.event.inputs.environment }}-backend \
            --resource-group play-learn-spark-${{ github.event.inputs.environment }}-rg \
            --image ghcr.io/linoymalakkaran/play-learn-spark-backend:${{ github.event.inputs.image_tag }} \
            --registry-login-server ghcr.io \
            --registry-username ${{ github.actor }} \
            --registry-password ${{ secrets.GITHUB_TOKEN }} \
            --dns-name-label playlearnspark-${{ github.event.inputs.environment }}-api \
            --ports 3000 \
            --environment-variables NODE_ENV=${{ github.event.inputs.environment }} PORT=3000 MONGO_URI=${{ secrets.MONGODB_ATLAS_URI }}/playlearnspark?retryWrites=true&w=majority GOOGLE_AI_KEY=${{ secrets.GOOGLE_AI_API_KEY }} \
            --secure-environment-variables JWT_SECRET=${{ secrets.JWT_SECRET }}

      - name: Output URLs
        run: |
          echo "Frontend: https://${{ steps.azure_resources.outputs.STORAGE }}.z1.web.core.windows.net" \
            && echo "Backend: https://${{ steps.azure_resources.outputs.BACKEND }}:3000"
