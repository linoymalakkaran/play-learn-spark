name: Terraform Infra

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (dev or prod)"
        required: true
        default: "dev"
      action:
        description: "Terraform action (plan/apply/destroy/force-unlock)"
        required: true
        default: "plan"
        type: choice
        options:
          - plan
          - apply
          - destroy
          - force-unlock
      lock_id:
        description: "Lock ID for force unlock (optional)"
        required: false

permissions:
  contents: read
  packages: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Always checkout dev branch
          ref: dev

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        working-directory: azure-infra
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TF_STATE_RG }}" \
            -backend-config="storage_account_name=${{ secrets.TF_STATE_SA }}" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=play-learn-spark-${{ github.event.inputs.environment }}.tfstate"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform Validate
        working-directory: azure-infra
        run: terraform validate

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        working-directory: azure-infra
        run: terraform plan -var environment=${{ github.event.inputs.environment }} -var image_tag=latest -var mongodb_atlas_connection_string="${{ secrets.MONGODB_ATLAS_URI }}" -var jwt_secret="${{ secrets.JWT_SECRET }}" -var google_ai_api_key="${{ secrets.GOOGLE_AI_API_KEY }}" -var github_username=${{ github.actor }} -var github_token="${{ secrets.GITHUB_TOKEN }}"

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: azure-infra
        run: terraform apply -auto-approve -var environment=${{ github.event.inputs.environment }} -var image_tag=latest -var mongodb_atlas_connection_string="${{ secrets.MONGODB_ATLAS_URI }}" -var jwt_secret="${{ secrets.JWT_SECRET }}" -var google_ai_api_key="${{ secrets.GOOGLE_AI_API_KEY }}" -var github_username=${{ github.actor }} -var github_token="${{ secrets.GITHUB_TOKEN }}"

      - name: Terraform Force Unlock
        if: ${{ github.event.inputs.action == 'force-unlock' }}
        working-directory: azure-infra
        run: |
          if [ -n "${{ github.event.inputs.lock_id }}" ]; then
            echo "Force unlocking with ID: ${{ github.event.inputs.lock_id }}"
            terraform force-unlock -force ${{ github.event.inputs.lock_id }}
          else
            echo "Force unlocking with ID: 3e237b6d-8175-5bd6-4c57-17438cd6a81c"
            terraform force-unlock -force 3e237b6d-8175-5bd6-4c57-17438cd6a81c
          fi

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: azure-infra
        run: |
          echo "⚠️ WARNING: About to destroy infrastructure for environment: ${{ github.event.inputs.environment }}"
          echo "Branch: dev"
          echo "Proceeding in 10 seconds..."
          sleep 10
          
          terraform destroy -auto-approve -var environment=${{ github.event.inputs.environment }} -var image_tag=latest -var mongodb_atlas_connection_string="${{ secrets.MONGODB_ATLAS_URI }}" -var jwt_secret="${{ secrets.JWT_SECRET }}" -var google_ai_api_key="${{ secrets.GOOGLE_AI_API_KEY }}" -var github_username=${{ github.actor }} -var github_token="${{ secrets.GITHUB_TOKEN }}"
