name: Infrastructure Management

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'prod'
        type: choice
        options:
          - prod
          - dev
      action:
        description: 'Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy
      confirm_destroy:
        description: 'Type "DESTROY" to confirm destruction'
        required: false
        type: string

env:
  AZURE_LOCATION: uaenorth
  PROJECT_NAME: playlearnspark

jobs:
  infrastructure:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      
      - name: Validate destroy confirmation
        if: github.event.inputs.action == 'destroy'
        run: |
          if [[ "${{ github.event.inputs.confirm_destroy }}" != "DESTROY" ]]; then
            echo "❌ Destruction not confirmed. Please type 'DESTROY' in the confirm_destroy field."
            exit 1
          fi
          echo "✅ Destruction confirmed"
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~1.0"
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Terraform Init with Azure Backend
        working-directory: azure-infra
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TERRAFORM_STATE_RG }}" \
            -backend-config="storage_account_name=${{ secrets.TERRAFORM_STATE_SA }}" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=playlearnspark.terraform.tfstate"
      
      - name: Terraform Plan
        if: github.event.inputs.action == 'plan'
        working-directory: azure-infra
        run: |
          ENV="${{ github.event.inputs.branch }}"
          
          terraform plan \
            -var="environment=$ENV" \
            -var="project_name=${{ env.PROJECT_NAME }}" \
            -var="location=${{ env.AZURE_LOCATION }}" \
            -var="domain_name=playlearnspark.dpdns.org" \
            -out=$ENV.tfplan
      
      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        working-directory: azure-infra
        run: |
          ENV="${{ github.event.inputs.branch }}"
          
          terraform apply \
            -var="environment=$ENV" \
            -var="project_name=${{ env.PROJECT_NAME }}" \
            -var="location=${{ env.AZURE_LOCATION }}" \
            -var="domain_name=playlearnspark.dpdns.org" \
            -auto-approve
      
      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        working-directory: azure-infra
        run: |
          ENV="${{ github.event.inputs.branch }}"
          
          terraform destroy \
            -var="environment=$ENV" \
            -var="project_name=${{ env.PROJECT_NAME }}" \
            -var="location=${{ env.AZURE_LOCATION }}" \
            -var="domain_name=playlearnspark.dpdns.org" \
            -auto-approve
      
      - name: Summary
        if: always()
        run: |
          echo "## 🏗️ Infrastructure Management Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Action**: ${{ github.event.inputs.action }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: ${{ github.event.inputs.branch }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "**Location**: ${{ env.AZURE_LOCATION }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ job.status }}" == "success" ]]; then
            echo "✅ Infrastructure operation completed successfully!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Resources deployed in UAE North region**" >> $GITHUB_STEP_SUMMARY
            echo "**Domain**: playlearnspark.dpdns.org" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Infrastructure operation failed. Check the logs for details." >> $GITHUB_STEP_SUMMARY
          fi